SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

DROP SCHEMA IF EXISTS saam;
CREATE SCHEMA IF NOT EXISTS saam DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE saam ;

-- -----------------------------------------------------
-- Table saam.PERFIS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.PERFIS (
  COD_PERFIL INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(20) NOT NULL ,
  PRIMARY KEY (COD_PERFIL) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.ENDERECOS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.ENDERECOS (
  COD_ENDERECO INT NOT NULL AUTO_INCREMENT ,
  LOGRADOURO VARCHAR(150) NOT NULL ,
  BAIRRO VARCHAR(50) NOT NULL ,
  CIDADE VARCHAR(50) NOT NULL ,
  ESTADO VARCHAR(2) NOT NULL ,
  CEP VARCHAR(8) NOT NULL ,
  PAIS VARCHAR(50) NOT NULL ,
  PRIMARY KEY (COD_ENDERECO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.PESSOAS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.PESSOAS (
  COD_PESSOA INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(60) NOT NULL ,
  EMAIL VARCHAR(50) NOT NULL ,
  SEXO VARCHAR(1) NOT NULL ,
  ESTADO_CIVIL VARCHAR(20) NOT NULL ,
  TELEFONE_RESIDENCIAL VARCHAR(45) NOT NULL ,
  CELULAR VARCHAR(45) NOT NULL ,
  TELEFONE_COMERCIAL VARCHAR(45) NOT NULL ,
  COD_ENDERECO INT NOT NULL ,
  PRIMARY KEY (COD_PESSOA) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.USUARIOS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.USUARIOS (
  COD_USUARIO INT NOT NULL AUTO_INCREMENT ,
  USUARIO VARCHAR(50) NULL ,
  SENHA VARCHAR(15) NULL ,
  COD_PERFIL INT NOT NULL ,
  COD_PESSOA INT NOT NULL ,
  PRIMARY KEY (COD_USUARIO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.TIPO_ATENDIMENTOS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.TIPO_ATENDIMENTOS (
  COD_TIPO_ATENDIMENTO INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(20) NOT NULL ,
  PRIMARY KEY (COD_TIPO_ATENDIMENTO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.CLASSIFICACOES
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.CLASSIFICACOES (
  COD_CLASSIFICACAO INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(50) NOT NULL ,
  PRIMARY KEY (COD_CLASSIFICACAO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.AVALIACOES
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.AVALIACOES (
  COD_AVALIACAO INT NOT NULL AUTO_INCREMENT ,
  COD_CLASSIFICACAO INT NOT NULL ,
  SUGESTAO VARCHAR(250) NULL ,
  DATA DATETIME NULL ,
  PRIMARY KEY (COD_AVALIACAO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.AREAS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.AREAS (
  COD_AREA INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(45) NOT NULL ,
  PRIMARY KEY (COD_AREA) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.MENSAGENS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.MENSAGENS (
  COD_MENSAGEM INT NOT NULL AUTO_INCREMENT ,
  DATA DATETIME NOT NULL ,
  TEXTO VARCHAR(200) NOT NULL ,
  COD_USUARIO INT NOT NULL ,
  PRIMARY KEY (COD_MENSAGEM) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.ATEN_MENS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.ATEN_MENS (
  COD_ATENDIMENTO INT NOT NULL ,
  COD_MENSAGEM INT NOT NULL ,
  PRIMARY KEY (COD_ATENDIMENTO, COD_MENSAGEM) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.FUNCIONALIDADES
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.FUNCIONALIDADES (
  COD_FUNCIONALIDADE INT NOT NULL AUTO_INCREMENT ,
  NOME_TECNICO VARCHAR(50) NOT NULL ,
  NOME_USUARIO VARCHAR(20) NOT NULL ,
  PRIMARY KEY (COD_FUNCIONALIDADE, NOME_TECNICO, NOME_USUARIO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.PERF_FUNC
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.PERF_FUNC (
  COD_PERFIL INT NOT NULL ,
  COD_FUNCIONALIDADE INT NOT NULL ,
  PRIMARY KEY (COD_PERFIL, COD_FUNCIONALIDADE) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.VOLUNTARIOS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.VOLUNTARIOS (
  COD_VOLUNTARIO INT NOT NULL AUTO_INCREMENT ,
  COD_AREA INT NOT NULL ,
  COD_PESSOA INT NOT NULL ,
  PRIMARY KEY (COD_VOLUNTARIO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.TIPO_LOGS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.TIPO_LOGS (
  COD_TIPO_LOG INT NOT NULL AUTO_INCREMENT ,
  NOME VARCHAR(45) NOT NULL ,
  PRIMARY KEY (COD_TIPO_LOG, NOME) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.LOGS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.LOGS (
  COD_LOG INT NOT NULL AUTO_INCREMENT ,
  DATA DATETIME NOT NULL ,
  MENSAGEM VARCHAR(150) NOT NULL ,
  COD_TIPO_LOG INT NOT NULL ,
  COD_USUARIO INT NOT NULL ,
  PRIMARY KEY (COD_LOG) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.PERGUNTAS_FREQUENTES
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.PERGUNTAS_FREQUENTES (
  COD_PERGUNTA_FREQUENTE INT NOT NULL AUTO_INCREMENT ,
  PERGUNTA VARCHAR(45) NOT NULL ,
  RESPOSTA VARCHAR(45) NOT NULL ,
  DATA_CRIACAO DATETIME NOT NULL,
  COD_AREA INT NOT NULL ,
  PRIMARY KEY (COD_PERGUNTA_FREQUENTE) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table saam.ATENDIMENTOS
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS saam.ATENDIMENTOS (
  COD_ATENDIMENTO INT NOT NULL AUTO_INCREMENT ,
  COD_ATENDENTE INT NOT NULL ,
  COD_ATENDIDO INT NOT NULL ,
  COD_TIPO_ATENDIMENTO INT NOT NULL ,
  COD_AVALIACAO INT NOT NULL ,
  COD_AREA INT NOT NULL ,
  DATA DATETIME NOT NULL ,
  PRIMARY KEY (COD_ATENDIMENTO) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- INDEXES
-- -----------------------------------------------------

ALTER TABLE saam.ATEN_MENS 
ADD INDEX IDX_ATEN_MENS_COD_MENSAGEM (COD_MENSAGEM ASC);
ALTER TABLE saam.ATEN_MENS 
ADD INDEX IDX_ATEN_MENS_COD_ATENDIMENTO (COD_MENSAGEM ASC);

ALTER TABLE saam.ATENDIMENTOS 
ADD INDEX IDX_ATENDIMENTOS_COD_ATENDENTE (COD_ATENDENTE ASC);
ALTER TABLE saam.ATENDIMENTOS 
ADD INDEX IDX_ATENDIMENTOS_COD_ATENDIDO (COD_ATENDIDO ASC);
ALTER TABLE saam.ATENDIMENTOS 
ADD INDEX IDX_ATENDIMENTOS_COD_TIPO_ATENDIMENTO (COD_TIPO_ATENDIMENTO ASC);
ALTER TABLE saam.ATENDIMENTOS 
ADD INDEX IDX_ATENDIMENTOS_COD_AVALIACAO (COD_AVALIACAO ASC);
ALTER TABLE saam.ATENDIMENTOS 
ADD INDEX IDX_ATENDIMENTOS_COD_AREA (COD_AREA ASC);

ALTER TABLE saam.AVALIACOES 
ADD INDEX IDX_AVALIACOES_COD_CLASSIFICACAO (COD_CLASSIFICACAO ASC);

ALTER TABLE saam.USUARIOS 
ADD INDEX IDX_USUARIOS_COD_PERFIL (COD_PERFIL ASC);
ALTER TABLE saam.USUARIOS 
ADD INDEX IDX_USUARIOS_COD_PESSOA (COD_PESSOA ASC);

ALTER TABLE saam.PERF_FUNC 
ADD INDEX IDX_PERF_FUNC_COD_PERFIL (COD_PERFIL ASC);
ALTER TABLE saam.PERF_FUNC 
ADD INDEX IDX_PERF_FUNC_COD_FUNCIONALIDADE (COD_FUNCIONALIDADE ASC);

ALTER TABLE saam.LOGS 
ADD INDEX IDX_LOGS_COD_TIPO_LOG (COD_TIPO_LOG ASC);
ALTER TABLE saam.LOGS 
ADD INDEX IDX_LOGS_COD_USUARIO (COD_USUARIO ASC);

ALTER TABLE saam.MENSAGENS 
ADD INDEX IDX_MENSAGENS_COD_USUARIO (COD_USUARIO ASC);

ALTER TABLE saam.PERGUNTAS_FREQUENTES 
ADD INDEX IDX_PERGUNTAS_FREQUENTES_COD_AREA (COD_AREA ASC);

ALTER TABLE saam.PESSOAS 
ADD INDEX IDX_PESSOAS_COD_ENDERECO (COD_ENDERECO ASC);

ALTER TABLE saam.VOLUNTARIOS 
ADD INDEX IDX_VOLUNTARIOS_COD_AREA (COD_AREA ASC);
ALTER TABLE saam.VOLUNTARIOS 
ADD INDEX IDX_VOLUNTARIOS_COD_VOLUNTARIO (COD_VOLUNTARIO ASC);


-- -----------------------------------------------------
-- CHAVES ESTRANGEIRAS
-- -----------------------------------------------------

ALTER TABLE saam.PESSOAS ADD CONSTRAINT FRK_PESSOAS_COD_ENDERECO FOREIGN KEY (COD_ENDERECO) REFERENCES saam.ENDERECOS (COD_ENDERECO );

ALTER TABLE saam.USUARIOS ADD CONSTRAINT FRK_USUARIOS_COD_PERFIL FOREIGN KEY (COD_PERFIL )  REFERENCES saam.PERFIS (COD_PERFIL );
ALTER TABLE saam.USUARIOS ADD CONSTRAINT FRK_USUARIOS_COD_PESSOA FOREIGN KEY (COD_PESSOA )  REFERENCES saam.PESSOAS (COD_PESSOA );

ALTER TABLE saam.AVALIACOES ADD CONSTRAINT FRK_AVALIACOES_COD_CLASSIFICACAO FOREIGN KEY (COD_CLASSIFICACAO ) REFERENCES saam.CLASSIFICACOES (COD_CLASSIFICACAO );

ALTER TABLE saam.MENSAGENS ADD CONSTRAINT FRK_MENSAGENS_COD_USUARIO FOREIGN KEY (COD_USUARIO ) REFERENCES saam.USUARIOS (COD_USUARIO );


ALTER TABLE saam.ATEN_MENS ADD CONSTRAINT FRK_ATEND_MENS_COD_ATENDIMENTO FOREIGN KEY (COD_ATENDIMENTO ) REFERENCES saam.ATENDIMENTOS (COD_ATENDIMENTO );
ALTER TABLE saam.ATEN_MENS ADD CONSTRAINT FRK_ATEND_MENS_COD_MENSAGEM FOREIGN KEY (COD_MENSAGEM ) REFERENCES saam.MENSAGENS (COD_MENSAGEM );

ALTER TABLE saam.PERF_FUNC ADD CONSTRAINT FRK_PERF_FUNC_COD_PERFIL FOREIGN KEY (COD_PERFIL ) REFERENCES saam.PERFIS (COD_PERFIL );
ALTER TABLE saam.PERF_FUNC ADD CONSTRAINT FRK_PERF_FUNC_COD_FUNCIONALIDADE FOREIGN KEY (COD_FUNCIONALIDADE ) REFERENCES saam.FUNCIONALIDADES (COD_FUNCIONALIDADE );

ALTER TABLE saam.VOLUNTARIOS ADD CONSTRAINT FRK_VOLUNTARIOS_COD_AREA FOREIGN KEY (COD_AREA ) REFERENCES saam.AREAS (COD_AREA );
ALTER TABLE saam.VOLUNTARIOS ADD CONSTRAINT FRK_VOLUNTARIOS_COD_VOLUNTARIO FOREIGN KEY (COD_VOLUNTARIO )REFERENCES saam.PESSOAS (COD_PESSOA );

ALTER TABLE saam.LOGS ADD CONSTRAINT FRK_LOGS_COD_TIPO_LOG FOREIGN KEY (COD_TIPO_LOG ) REFERENCES saam.TIPO_LOGS (COD_TIPO_LOG );
ALTER TABLE saam.LOGS ADD CONSTRAINT FRK_LOGS_COD_USUARIO FOREIGN KEY (COD_USUARIO ) REFERENCES saam.USUARIOS (COD_USUARIO );

ALTER TABLE saam.PERGUNTAS_FREQUENTES ADD CONSTRAINT FRK_PERGUNTAS_FREQUENTES_COD_AREA FOREIGN KEY (COD_AREA ) REFERENCES saam.AREAS (COD_AREA );

ALTER TABLE saam.ATENDIMENTOS ADD CONSTRAINT FRK_ATENDIMENTOS_COD_ATENDENTE FOREIGN KEY (COD_ATENDENTE ) REFERENCES saam.USUARIOS (COD_USUARIO );
ALTER TABLE saam.ATENDIMENTOS ADD CONSTRAINT FRK_ATENDIMENTOS_COD_ATENDIDO FOREIGN KEY (COD_ATENDIDO ) REFERENCES saam.USUARIOS (COD_USUARIO );
ALTER TABLE saam.ATENDIMENTOS ADD CONSTRAINT FRK_ATENDIMENTOS_COD_TIPO_ATENDIMENTO FOREIGN KEY (COD_TIPO_ATENDIMENTO ) REFERENCES saam.TIPO_ATENDIMENTOS (COD_TIPO_ATENDIMENTO );
ALTER TABLE saam.ATENDIMENTOS ADD CONSTRAINT FRK_ATENDIMENTOS_COD_AVALIACAO FOREIGN KEY (COD_AVALIACAO ) REFERENCES saam.AVALIACOES (COD_AVALIACAO );
ALTER TABLE saam.ATENDIMENTOS ADD CONSTRAINT FRK_ATENDIMENTOS_COD_AREA FOREIGN KEY (COD_AREA ) REFERENCES saam.AREAS (COD_AREA );


-- -----------------------------------------------------
-- UNIQUES
-- -----------------------------------------------------

ALTER TABLE saam.USUARIOS 
ADD UNIQUE INDEX UNK_USUARIOS_USUARIO (USUARIO ASC) ;
ALTER TABLE saam.PESSOAS 
ADD UNIQUE INDEX UNK_PESSOAS_EMAIL (EMAIL ASC) ;

USE saam ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
